# Design Document for Stock Tracking Web App

## Overview
This web app is designed to help users track their equity positions, analyze stock valuation metrics, and record forecasts on stock valuations. The app will provide tools to manage portfolios, evaluate past investment decisions, and make informed forecasts based on user-defined assumptions. Below is a detailed design document outlining the app's key features, architecture, and user interface.

---

## Key Features

### 1. **Portfolio Management & Performance Benchmarking**
- **Purpose**: Allow users to record and track their equity positions and Allow users to compare their portfolio performance against market benchmarks.
- **Core Functionalities**:
  - Add, edit, or delete positions (e.g., stock ticker, number of shares, purchase price).
  - Display portfolio performance with metrics like total value, unrealized gains/losses, and allocation percentages.
  - Provide historical performance charts for individual stocks and the overall portfolio.
  - Compare to benchmarks such an indexes
	  - Include common benchmarks like S&P 500, NASDAQ, or sector-specific indices.
	  - Display performance metrics such as annualized returns, volatility, and Sharpe ratio.
- **Data Requirements**:
  - User-specific portfolio data stored in a secure database.
  - Real-time or delayed stock price updates via an API (e.g., Alpha Vantage, IEX Cloud).
    
- **Benefit**: Helps users evaluate whether their portfolio is outperforming or underperforming the market.

### 2. **Scorekeeper for Investment Decisions**
- **Purpose**: Evaluate the quality of past buy/sell decisions based on subsequent price movements.
- **Core Functionalities**:
  - Track every buy/sell decision with details like the date, price, and quantity.
  - Detailed notes field
  - Compare the stock’s performance after the decision (e.g., price change after 1 month, 6 months, etc.).
  - Assign a score (e.g., percentage gain/loss) to each decision and provide aggregate statistics on decision quality.
- **Data Requirements**:
  - Historical stock price data for comparison.
  - User-specific transaction history stored securely.

### 3. **Valuation Metrics Analysis**
- **Purpose**: Help users evaluate whether it’s a good time to buy or sell based on historical valuation data.
- **Core Functionalities**:
  - Display recent history of key valuation metrics (e.g., P/E ratio, P/B ratio, dividend yield).
  - Provide visualizations like line charts or bar graphs for trends over time.
  - Show the historical ranges for the valuation metrics
  - Allow users to set custom thresholds for "good buy" or "good sell" signals (e.g., P/E below a certain level).
- **Data Requirements**:
  - Historical financial data for stocks sourced from APIs or financial databases.
  - User-configurable thresholds stored in the database.

### 4. **Forecasting Tool**
- **Purpose**: Allow users to create forecasts by inputting assumptions about growth, profitability, and valuation multiples.
- **Core Functionalities**:
	- 1. Valuation / Hypothesis Store
		  - Input fields for growth rate (%), profit margin (%), and P/E multiple assumptions.
		  - Calculate projected revenue, earnings per share (EPS), and share price based on inputs.
		  - Display results in both tabular and graphical formats (e.g., projected share price vs. time).
		  - Save forecasts for future reference and comparison with actual outcomes.
		  - Allow users to set price alerts for specific stocks (e.g., "Notify me when the stock hits $X").
		  - Include valuation-based alerts (e.g., P/E ratio exceeds a certain threshold).
		  - Push notifications or emails to inform users when their exit criteria are met.
	- 2. Valuation Sense Check
		- Same inputs fields as above, but with Share Price filled in
		- Allow back calculating the EPS series (short, medium, long term), risk (discount), PE, PS or profit margin.

- **Data Requirements**:
  - User-defined input data stored in the database.
  - Calculation engine to process inputs and generate outputs.